/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sdfisica;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Helbert Monteiro
 */
public class SD_Fisica extends javax.swing.JFrame {

    /**
     * Creates new form SD_Fisica
     */
    
    private ServerSocket socketServidor;
    private Socket       dispositivoCliente;
    
    private Scanner  scanner;
    private String   json;
    private Gson     gson;
    private float    x, y, z;
    
    private List<Captura>  listaCaptura;
    
    private Thread   thread;
    
    private java.lang.reflect.Type listTypeCaptura;
    
    private GeradorGrafico geradorGrafico;
    
    public SD_Fisica() {
        initComponents();
        geradorGrafico = new GeradorGrafico();
        geradorGrafico.addValor(0, 0, 0, 0);
        painelGrafico.removeAll();
        painelGrafico.add(geradorGrafico.exibeGrafico(painelGrafico.getWidth(), painelGrafico.getHeight()));
        painelGrafico.setVisible(true);
        painelGrafico.revalidate();
        painelGrafico.repaint();
        iniciar();
    }
    
    private void iniciar(){
        geradorGrafico = new GeradorGrafico();
        
        thread = new Thread(new Runnable() {
            @Override
            public void run() {
                try{
                    socketServidor = new ServerSocket(9000);
                    while(true){
                        dispositivoCliente = socketServidor.accept();

                        console.setText("");
                        console.append("Cliente conectado: " + dispositivoCliente.getInetAddress().getHostAddress() + "\n\n");
                        System.out.println("\n\nCliente conectado: " + dispositivoCliente.getInetAddress().getHostAddress());

                        scanner = new Scanner(dispositivoCliente.getInputStream());
                        json    = scanner.nextLine();

                        listTypeCaptura = new TypeToken<ArrayList<Captura>>(){}.getType();
                        gson    = new Gson();
                        listaCaptura = new ArrayList<>();
                        listaCaptura = gson.fromJson(json, listTypeCaptura);

                        for(int i = 0; i < listaCaptura.size(); i++){
                            console.append(i + "->  " + listaCaptura.get(i).toString() + "\n");
                            System.out.println(listaCaptura.get(i).toString());
                            
                            x = listaCaptura.get(i).getX();
                            y = listaCaptura.get(i).getY();
                            z = listaCaptura.get(i).getZ();
                            
                            geradorGrafico.addValor(x, y, z, i);
                        }

                        painelGrafico.removeAll();
                        painelGrafico.add(geradorGrafico.exibeGrafico(painelGrafico.getWidth(), painelGrafico.getHeight()));
                        painelGrafico.setVisible(true);
                        painelGrafico.revalidate();
                        painelGrafico.repaint();
                        listaCaptura.clear();
                        
                        dispositivoCliente.close();
                    }
                }catch(IOException ex){
                    Logger.getLogger(SDFisica.class.getName()).log(Level.SEVERE, null, ex);
                }
            
        }
        });
        
        thread.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelGrafico = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        botaoLimpar = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SD Física");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        painelGrafico.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout painelGraficoLayout = new javax.swing.GroupLayout(painelGrafico);
        painelGrafico.setLayout(painelGraficoLayout);
        painelGraficoLayout.setHorizontalGroup(
            painelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        painelGraficoLayout.setVerticalGroup(
            painelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );

        console.setEditable(false);
        console.setColumns(20);
        console.setRows(5);
        console.setText("Aguardando conexão...");
        jScrollPane1.setViewportView(console);

        botaoLimpar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoLimpar.setText("LIMPAR");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        botaoSalvar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoSalvar.setText("SALVAR GRÁFICO");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("CONSOLE");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("GRÁFICO");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(215, 215, 215))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(433, 433, 433))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addComponent(painelGrafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(painelGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaoSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        geradorGrafico.addValor(0, 0, 0, 0);
        painelGrafico.removeAll();
        painelGrafico.add(geradorGrafico.exibeGrafico(painelGrafico.getWidth(), painelGrafico.getHeight()));
        painelGrafico.setVisible(true);
        painelGrafico.revalidate();
        painelGrafico.repaint();
        console.setText("Aguadrando conexão...");
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        try {
            String nome = dispositivoCliente.getInetAddress().getHostAddress() + 
                    "_" + String.valueOf(Calendar.getInstance().get(Calendar.DAY_OF_MONTH)) +
                    "_" + String.valueOf(Calendar.getInstance().get(Calendar.MONTH)) +
                    "_" + String.valueOf(Calendar.getInstance().get(Calendar.YEAR)) +
                    "_" + String.valueOf(Calendar.getInstance().get(Calendar.HOUR_OF_DAY)) +
                    "_" + String.valueOf(Calendar.getInstance().get(Calendar.MINUTE))+
                    "_" + String.valueOf(Calendar.getInstance().get(Calendar.SECOND));
            geradorGrafico.salvar(new FileOutputStream(nome + ".png"));
            JOptionPane.showMessageDialog(null, "Salvo na pasta do projeto: " + nome, "Salvo", JOptionPane.INFORMATION_MESSAGE, null);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar", "Erro", JOptionPane.ERROR_MESSAGE, null);
            Logger.getLogger(SD_Fisica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível salvar", "Erro", JOptionPane.ERROR_MESSAGE, null);
            Logger.getLogger(SD_Fisica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botaoSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SD_Fisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SD_Fisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SD_Fisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SD_Fisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new SD_Fisica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JTextArea console;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel painelGrafico;
    // End of variables declaration//GEN-END:variables
}
